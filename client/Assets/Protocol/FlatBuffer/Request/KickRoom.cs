// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatBuffer.Request
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct KickRoom : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static KickRoom GetRootAsKickRoom(ByteBuffer _bb) { return GetRootAsKickRoom(_bb, new KickRoom()); }
  public static KickRoom GetRootAsKickRoom(ByteBuffer _bb, KickRoom obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public KickRoom __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong User { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<FlatBuffer.Request.KickRoom> CreateKickRoom(FlatBufferBuilder builder,
      ulong user = 0) {
    builder.StartTable(1);
    KickRoom.AddUser(builder, user);
    return KickRoom.EndKickRoom(builder);
  }

  public static void StartKickRoom(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddUser(FlatBufferBuilder builder, ulong user) { builder.AddUlong(0, user, 0); }
  public static Offset<FlatBuffer.Request.KickRoom> EndKickRoom(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatBuffer.Request.KickRoom>(o);
  }
};


}
