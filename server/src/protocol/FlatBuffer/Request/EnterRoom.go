// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package Request

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type EnterRoom struct {
	_tab flatbuffers.Table
}

func GetRootAsEnterRoom(buf []byte, offset flatbuffers.UOffsetT) *EnterRoom {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &EnterRoom{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *EnterRoom) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *EnterRoom) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *EnterRoom) Id() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func EnterRoomStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func EnterRoomAddId(builder *flatbuffers.Builder, id flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(id), 0)
}
func EnterRoomEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
